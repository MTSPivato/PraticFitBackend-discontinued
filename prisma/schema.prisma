generator client {
  provider = "prisma-client-dart"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// tabela responsavel por armazenar os dados do usuario
model User {
  id             Int         @id @default(autoincrement())
  name           String
  email          String      @unique
  password       String
  cpf            String?     @unique
  phone          String?     @unique
  city           String?
  state          String?
  cep            String?
  birth_date     DateTime?
  gender         GenderEnum?
  role           UserRole    @default(user)
  created_at     DateTime    @default(now())
  updated_at     DateTime?
  desactivate_at DateTime?
}

// enum responsavel por armazenar os generos
enum GenderEnum {
  Male
  Female
}

// enum responsavel por armazenar os tipos de usuario
enum UserRole {
  admin
  user
}

// tabela responsavel por armazenar os dados da academia
model Gym {
  id             Int       @id @default(autoincrement())
  name           String
  razao_social   String?
  cnpj           String?   @unique
  phone          String?   @unique
  email          String?   @unique
  password       String
  city           String?
  state          String?
  cep            String?
  created_at     DateTime  @default(now())
  updated_at     DateTime?
  desactivate_at DateTime?
}

// tabela responsavel por vincular a conta do personal com o usuario dele
model Personal {
  id             Int       @id @default(autoincrement())
  user_id        Int
  cref           String?   @unique
  created_at     DateTime  @default(now())
  updated_at     DateTime?
  desactivate_at DateTime?
}

// tabela responsavel por vincular a conta do nutricionista com o usuario dele
model Nutritionist {
  id             Int       @id @default(autoincrement())
  user_id        Int
  crn            String?   @unique
  created_at     DateTime  @default(now())
  updated_at     DateTime?
  desactivate_at DateTime?
}

// tabela responsavel por vincular o usuario com a academia
model Gym_User {
  id             Int       @id @default(autoincrement())
  gym_id         Int
  user_id        Int
  dt_binding     DateTime  @default(now())
  dt_approved    DateTime?
  desactivate_at DateTime?
}

// tabela responsavel por vincular o usuario com o personal
model Personal_User {
  id             Int       @id @default(autoincrement())
  personal_id    Int
  user_id        Int
  dt_binding     DateTime  @default(now())
  dt_approved    DateTime?
  desactivate_at DateTime?
}

// tabela responsavel por vincular o usuario com o nutricionista
model Nutritionist_User {
  id              Int       @id @default(autoincrement())
  nutritionist_id Int
  user_id         Int
  dt_binding      DateTime  @default(now())
  dt_approved     DateTime?
  desactivate_at  DateTime?
}
