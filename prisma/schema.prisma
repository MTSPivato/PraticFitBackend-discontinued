generator client {
  provider = "prisma-client-dart"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// tabela responsavel por armazenar os dados do usuario
model Usuario {
  id            Int         @id @default(autoincrement())
  nome          String
  email         String      @unique
  senha         String
  cpf           String?     @unique
  telefone      String?     @unique
  cidade        String?
  estado        String?
  cep           String?
  aniversario   DateTime?
  genero        GenderEnum?
  dt_criado     DateTime    @default(now())
  dt_updated    DateTime
  dt_desativado DateTime?
  role          UserRole    @default(user)
}

// enum responsavel por armazenar os generos
enum GenderEnum {
  Masculino
  Feminino
}

// enum responsavel por armazenar os tipos de usuario
enum UserRole {
  admin
  user
}

// tabela responsavel por armazenar os dados da academia
model Academia {
  id            Int       @id @default(autoincrement())
  nome          String
  razao_social  String?
  cnpj          String?   @unique
  telefone      String?   @unique
  email         String?   @unique
  senha         String
  cidade        String?
  estado        String?
  cep           String?
  dt_criado     DateTime  @default(now())
  dt_updated    DateTime
  dt_desativado DateTime?
}

// tabela responsavel por vincular a conta do personal com o usuario dele
model Personal {
  id            Int       @id @default(autoincrement())
  id_usuario    Int
  cref          String?   @unique
  dt_criado     DateTime  @default(now())
  dt_updated    DateTime
  dt_desativado DateTime?
}

// tabela responsavel por vincular a conta do nutricionista com o usuario dele
model Nutricionista {
  id            Int       @id @default(autoincrement())
  id_usuario    Int
  crn           String?   @unique
  dt_criado     DateTime  @default(now())
  dt_updated    DateTime
  dt_desativado DateTime?
}

// tabela responsavel por vincular o usuario com a academia
model Academia_Usuario {
  id            Int       @id @default(autoincrement())
  academia_id   Int
  usuario_id    Int
  dt_vinculacao DateTime  @default(now())
  dt_aprovacao  DateTime?
  dt_desativado DateTime?
}

// tabela responsavel por vincular o usuario com o personal
model Personal_Usuario {
  id            Int       @id @default(autoincrement())
  personal_id   Int
  usuario_id    Int
  dt_vinculacao DateTime  @default(now())
  dt_aprovacao  DateTime?
  dt_desativado DateTime?
}

// tabela responsavel por vincular o usuario com o nutricionista
model Nutricionista_Usuario {
  id               Int       @id @default(autoincrement())
  nutricionista_id Int
  usuario_id       Int
  dt_vinculacao    DateTime  @default(now())
  dt_aprovacao     DateTime?
  dt_desativado    DateTime?
}
